# backend/app/bot/handlers/user.py
import logging
from aiogram import Router, types, F
from aiogram.filters import CommandStart
from aiogram.utils.markdown import hbold

from app.bot.keyboards.inline import get_main_menu_keyboard # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à—É –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É

# –°–æ–∑–¥–∞–µ–º —Ä–æ—É—Ç–µ—Ä –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∫–æ–º–∞–Ω–¥/—Å–æ–æ–±—â–µ–Ω–∏–π
user_router = Router(name="user_handlers")
logger = logging.getLogger(__name__)

@user_router.message(CommandStart())
async def handle_start(message: types.Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start.
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è Mini App.
    """
    user_name = message.from_user.full_name
    user_id = message.from_user.id
    logger.info(f"User {user_id} ({user_name}) started the bot.")

    # –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    welcome_text = (
        f"üëã –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {hbold(user_name)}!\n\n"
        f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –º–∞–≥–∞–∑–∏–Ω. –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ç–∞–ª–æ–≥ "
        f"–∏ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ –ø—Ä—è–º–æ –∑–¥–µ—Å—å."
    )

    # –ü–æ–ª—É—á–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π WebApp
    reply_markup = get_main_menu_keyboard()

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    await message.answer(
        text=welcome_text,
        reply_markup=reply_markup
    )

# –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è callback'–æ–≤, –µ—Å–ª–∏ –±—É–¥—É—Ç –¥—Ä—É–≥–∏–µ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏
@user_router.callback_query(F.data == "shop_unavailable")
async def handle_shop_unavailable(callback_query: types.CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É-–ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä, –µ—Å–ª–∏ –º–∞–≥–∞–∑–∏–Ω –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω."""
    await callback_query.answer(
        "–ò–∑–≤–∏–Ω–∏—Ç–µ, –º–∞–≥–∞–∑–∏–Ω —Å–µ–π—á–∞—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
        show_alert=True # –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∫–∞–∫ alert
    )
    logger.warning(f"User {callback_query.from_user.id} clicked 'shop_unavailable' button.")

# –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ª—é–±—ã—Ö –¥—Ä—É–≥–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è,
# –µ—Å–ª–∏ –Ω–µ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è –¥—Ä—É–≥–∞—è –ª–æ–≥–∏–∫–∞ –±–æ—Ç–∞, –∫—Ä–æ–º–µ –∑–∞–ø—É—Å–∫–∞ Mini App.
# @user_router.message()
# async def handle_other_messages(message: types.Message):
#     """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ª—é–±—ã–µ –¥—Ä—É–≥–∏–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è."""
#     logger.debug(f"Received message from {message.from_user.id}: {message.text[:50]}")
#     # –ú–æ–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å –ø—Ä–æ –∫–Ω–æ–ø–∫—É
#     await message.reply(
#         "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω.",
#         reply_markup=get_main_menu_keyboard()
#     )